# Copyright 2024 The GWPSan Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Tests

on:
  push:
    branches:
    - main
  pull_request:
  schedule: # Triggered nightly to reset the Bazel cache.
    - cron: '42 5 * * *'
  workflow_dispatch:

jobs:
  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix:
        compilation_mode: ['fastbuild', 'opt']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check license headers
        run: "./check-license.sh"

      - name: Install dependencies
        # We need:
        #  - LLVM C++ Standard library (some libstdc++ fail with newer Clang)
        #  - Clang 18 or later
        run: |
          set -e
          sudo apt-get update
          wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh
          yes '' | sudo bash /tmp/llvm.sh 18
          sudo apt-get install -yq libc++-18-dev libc++abi-18-dev
      - name: Configure system
        # Ubuntu systems disallow perf events completely with the undocumented
        # perf_event_paranoid=4. Restore default kernel setting.
        run: |
          set -e
          uname -a
          echo "old perf_event_paranoid: $(< /proc/sys/kernel/perf_event_paranoid)"
          echo 2 | sudo tee /proc/sys/kernel/perf_event_paranoid

      - name: Restore Bazel cache
        uses: actions/cache/restore@v4
        with:
          path: "~/.cache/bazel"
          key: bazel-cache-${{ matrix.compilation_mode }}
          restore-keys: bazel-cache-${{ matrix.compilation_mode }}-
      - name: Run Bazel tests
        env:
          CC: clang-18
          CXX: clang++-18
        run: |
          set -ue
          case "$(uname -m)" in
            x86_64) extra_args=(--config=x86_64) ;;
            *)      extra_args=()                ;;
          esac
          bazel test --test_output=errors -c ${{ matrix.compilation_mode }} --config=dev \
            --action_env=CC="$CC" --action_env=CXX="$CXX" "${extra_args[@]}" -- //gwpsan/...
      - name: Save Bazel cache
        if: github.ref == 'refs/heads/main'
        uses: actions/cache/save@v4
        with:
          path: "~/.cache/bazel"
          key: bazel-cache-${{ matrix.compilation_mode }}-${{ github.run_id }}
